Processor
7 November 2021

INPUT/OUTPUT

Inputs will be given by testbenches. We will first store data in the registers or can use immediate operations . Then, we can give instructions in R type or I type encoded format to extract the data , perform operation and again store it back in one of  the destination registers. 
We can verify the operations performed by printing out the register bank and seeing what values are stored in each of the registers after computations.
An example of the input instruction is :
Here we are trying to add the values stored in register R2 and R3 , and then finally store them in the R1 register.


ADD       R1, R2, R3


Bit Indices : 31       26     25         21      20          16     15          11     10         6      5         0                  
Instruction :   000000 	          00010               00011             00001              00000            000000
	
	



FUNCTIONALITY

Module inputs and outputs and their bit width are defined in the main.v file.
Instructions are encoded in R type  and I type encoding and are then further decoded while performing operations.
1. IF : Instruction Fetch - In this stage, the instruction pointed to by the PC (Program Counter) is fetched in IR (Instruction Register) from the memory and the next value of PC is computed. The fetched instruction is stored in temporary latches in between IF and ID stages and is then passed on for decoding.


2. ID : Instruction Decode - Here, the instruction already fetched in IR is decoded. The source and destination registers are obtained. The values stored in the register are passed on to the temporary latches and forwarded for execution.


3. EX : Execution - In this step , the ALU is used to perform some calculations. The exact operation depends on the instruction that is already decoded. As per the instruction ALU performs operations and stores it in ALUout 


4. MEM: Memory Access - The load and store instructions access the memory and pass on to the latch between  MEM and WB stages.


5. WB: Register Write Back - In this step, the computed value is finally written back to the destination register . Results may come from ALU or memory systems like in a load instruction. The address of the destination register is known from the instruction decoding stage and the computed value will be stored there.
